{"ast":null,"code":"import api from'../../utils/axios/api';import{AUTH_SUCCESS,AUTH_FAIL,ACTIVATE_SUCCESS,ACTIVATE_FAIL,REGISTER_SUCCESS,REGISTER_FAIL,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT_SUCCESS,LOADING}from'../actions/types';// SIGNUP USER\nexport var register=function register(_ref){var firstname=_ref.firstname,lastname=_ref.lastname,username=_ref.username,email=_ref.email,phone=_ref.phone,dob=_ref.dob,gender=_ref.gender,password=_ref.password,passcode=_ref.passcode;return function(dispatch){// Headers\nvar config={headers:{'Content-Type':'application/json'}};// Request Body\nvar body=JSON.stringify({firstname:firstname,lastname:lastname,username:username,email:email,phone:phone,dob:dob,gender:gender,password:password,passcode:passcode});api.post('/api/users/register',body,config).then(function(response){console.log(response);dispatch({type:REGISTER_SUCCESS,payload:response});}).catch(function(error){console.log(error.response);dispatch({type:REGISTER_FAIL,payload:error.response});});};};// LOGIN USER\nexport var login=function login(_ref2){var username=_ref2.username,password=_ref2.password;return function(dispatch){// Headers\nvar config={headers:{'Content-Type':'application/json'}};// Request Body\nvar body=JSON.stringify({username:username,password:password});api.post('/api/users/login',body,config).then(function(response){console.log(response);dispatch({type:LOGIN_SUCCESS,payload:response});}).catch(function(error){console.log(error.response);dispatch({type:LOGIN_FAIL,payload:error.response});});};};export var authenticate=function authenticate(){return function(dispatch,getState){// Account Activated\ndispatch({type:LOADING});api.get('/api/users/auth',tokenConfig(getState)).then(function(response){//console.log(response);\ndispatch({type:AUTH_SUCCESS,payload:response});}).catch(function(error){//console.log(error.response);\ndispatch({type:AUTH_FAIL,payload:error.response});});};};// LOGOUT USER\nexport var logout=function logout(){return function(dispatch,getState){api.get('/api/users/logout',tokenConfig(getState)).then(function(response){console.log(response.data);dispatch({type:LOGOUT_SUCCESS,payload:response});}).catch(function(error){console.log(error.response);dispatch({type:LOGOUT_SUCCESS,payload:error.response});});};};// Setup config with token - helper function\nexport var tokenConfig=function tokenConfig(getState){// Get token from state\nvar token=getState().auth.token;// Headers\nvar config={headers:{'Content-Type':'application/json'}};// If token, add to headers config\nif(token){config.headers['Authorization']=\"Token \".concat(token);}return config;};","map":{"version":3,"names":["api","AUTH_SUCCESS","AUTH_FAIL","ACTIVATE_SUCCESS","ACTIVATE_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOADING","register","firstname","lastname","username","email","phone","dob","gender","password","passcode","dispatch","config","headers","body","JSON","stringify","post","then","response","console","log","type","payload","catch","error","login","authenticate","getState","get","tokenConfig","logout","data","token","auth"],"sources":["/Users/jameswyse/Desktop/Projects/PRODUCTION/PROJECT_HEROKU/app/src/redux/actions/auth.js"],"sourcesContent":["import api from '../../utils/axios/api';\nimport {\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  ACTIVATE_SUCCESS,\n  ACTIVATE_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  LOADING,\n} from '../actions/types';\n\n\n\n// SIGNUP USER\nexport const register = ({ firstname, lastname, username, email, phone, dob, gender, password, passcode }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ firstname, lastname, username, email, phone, dob, gender, password, passcode });\n\n  api\n    .post('/api/users/register', body, config)\n    .then((response) => {\n      console.log(response);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: response,\n      });\n    })\n    .catch((error) => {\n      console.log(error.response);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response,\n      });\n    });\n};\n\n\n// LOGIN USER\nexport const login = ({ username, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  api\n    .post('/api/users/login', body, config)\n    .then((response) => {\n      console.log(response);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response,\n      });\n    })\n    .catch((error) => {\n      console.log(error.response);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response,\n      });\n    });\n};\n\n\n\nexport const authenticate = () => (dispatch, getState) => {\n  // Account Activated\n  dispatch({ type: LOADING });\n\n  api\n    .get('/api/users/auth', tokenConfig(getState))\n    .then((response) => {\n      //console.log(response);\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: response,\n      });\n    })\n    .catch((error) => {\n      //console.log(error.response);\n      dispatch({\n        type: AUTH_FAIL,\n        payload: error.response,\n      });\n    });\n};\n\n\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  api\n    .get('/api/users/logout', tokenConfig(getState))\n    .then((response) => {\n      console.log(response.data);\n      dispatch({\n        type: LOGOUT_SUCCESS,\n        payload: response,\n      });\n    })\n    .catch((error) => {\n      console.log(error.response);\n      dispatch({\n        type: LOGOUT_SUCCESS,\n        payload: error.response,\n      });\n    });\n};\n\n\n\n\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // Get token from state\n  const token = getState().auth.token;\n  \n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  } \n  return config;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}